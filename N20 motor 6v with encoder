#define STBY 33  // Standby pin
#define AIN1 25  // Motor input 1
#define AIN2 26  // Motor input 2
#define PWMA 27  // PWM pin for motor speed control

int encoderPin1 = 34;  // Encoder Output A
int encoderPin2 = 35;  // Encoder Output B (updated to correct pin if necessary)
volatile long encoderValue = 0; // Encoder count
volatile int lastEncoded = 0;  // Last encoded value

void setup() {
  pinMode(STBY, OUTPUT);
  pinMode(AIN1, OUTPUT);
  pinMode(AIN2, OUTPUT);
  pinMode(PWMA, OUTPUT);

  pinMode(encoderPin1, INPUT_PULLUP);
  pinMode(encoderPin2, INPUT_PULLUP);

  digitalWrite(STBY, HIGH); // Enable motor driver

  // Attach interrupts for encoder pins
  attachInterrupt(digitalPinToInterrupt(encoderPin1), updateEncoder, CHANGE);
  attachInterrupt(digitalPinToInterrupt(encoderPin2), updateEncoder, CHANGE);

  Serial.begin(115200); // Initialize serial communication
}

void loop() {
  // Rotate motor forward
  Serial.println("Motor moving forward...");
  moveMotor(true, 100); // Forward with 50% speed

  Serial.print("Encoder Value (Forward): ");
  Serial.println(encoderValue);
}

void moveMotor(bool forward, int speed) {
  if (forward) {
    // Debugging: Print statement when moving forward
    Serial.println("Motor moving forward!"); 
    digitalWrite(AIN1, HIGH);  // Motor input 1 HIGH
    digitalWrite(AIN2, LOW);   // Motor input 2 LOW
  } else {
    // Debugging: Print statement when moving backward
    Serial.println("Motor moving backward!"); 
    digitalWrite(AIN1, LOW);   // Motor input 1 LOW
    digitalWrite(AIN2, HIGH);  // Motor input 2 HIGH
  }
  analogWrite(PWMA, speed);  // Set motor speed (PWM)
}

void stopMotor() {
  digitalWrite(AIN1, LOW);
  digitalWrite(AIN2, LOW);
  analogWrite(PWMA, 0);  // Stop motor
}

void updateEncoder() {
  int MSB = digitalRead(encoderPin1); // Most significant bit
  int LSB = digitalRead(encoderPin2); // Least significant bit

  int encoded = (MSB << 1) | LSB; // Combine bits into one number
  int sum = (lastEncoded << 2) | encoded; // Combine current and previous states

  if (sum == 0b1101 || sum == 0b0100 || sum == 0b0010 || sum == 0b1011) encoderValue--;
  if (sum == 0b1110 || sum == 0b0111 || sum == 0b0001 || sum == 0b1000) encoderValue++;

  lastEncoded = encoded; // Update last encoded value
}
